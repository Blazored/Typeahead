@page "/"
@inject HttpClient httpClient

<h1>Blazored Typeahead - Form</h1>

<EditForm Model="@FormModel" OnValidSubmit="@HandleFormSubmit">
    <DataAnnotationsValidator />

    <BlazoredTypeaheadInput SearchMethod="@GetPeopleLocal"
                            @bind-Value="@FormModel.SelectedPerson"
                            Placeholder="Search by first name...">
        <SelectedTemplate Context="person">
            @person.Firstname
        </SelectedTemplate>
        <ResultTemplate Context="person">
            @person.Firstname @person.Lastname
        </ResultTemplate>
        <HeaderTemplate>
            <InputCheckbox id="showInactiveCheckbox" @bind-Value="@ShowInactive"/>
            <label for="showInactiveCheckbox">Display inactive</label>
        </HeaderTemplate>
        <FooterTemplate>
            Count: @Results.Count
        </FooterTemplate>
    </BlazoredTypeaheadInput>
    <ValidationMessage For="@(() => FormModel.SelectedPerson)" />

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<hr />

@if (FormModel.SelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @FormModel.SelectedPerson.Firstname @FormModel.SelectedPerson.Lastname</p>
}

<hr />

<h1>Blazored Typeahead - Standalone</h1>


<BlazoredTypeahead SearchMethod="@GetPeopleLocal"
                   @bind-Value="@SelectedPerson"
                   Placeholder="Search by first name...">
    <SelectedTemplate Context="person">
        @person.Firstname
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname
    </ResultTemplate>
</BlazoredTypeahead>

<hr />

@if (SelectedPerson != null)
{
    <p>Selected: @SelectedPerson.Firstname @SelectedPerson.Lastname</p>
}


@code {
    private List<Person> ExampleData = new List<Person>();
    private ApiResult<IEnumerable<Person>> Results;
    private Person SelectedPerson;
    private FormExample FormModel = new FormExample();
    private bool ShowInactive;

    protected override void OnInitialized()
    {
        ExampleData.AddRange(new List<Person>() {
            new Person() { Firstname = "Martelle", Lastname = "Cullon", IsActive = true },
            new Person() { Firstname = "Zelda", Lastname = "Abrahamsson", IsActive = true },
            new Person() { Firstname = "Benedetta", Lastname = "Posse", IsActive = true },
            new Person() { Firstname = "Benoite", Lastname = "Gobel", IsActive = false },
            new Person() { Firstname = "Charlot", Lastname = "Fullicks", IsActive = true },
            new Person() { Firstname = "Vinson", Lastname = "Turbat", IsActive = false },
            new Person() { Firstname = "Lenore", Lastname = "Malam", IsActive = true },
            new Person() { Firstname = "Emanuele", Lastname = "Kolakovic", IsActive = true },
            new Person() { Firstname = "Rosalyn", Lastname = "Mackin", IsActive = false },
            new Person() { Firstname = "Yanaton", Lastname = "Krishtopaittis", IsActive = true },
            new Person() { Firstname = "Frederik", Lastname = "McGeachie", IsActive = false },
            new Person() { Firstname = "Parrnell", Lastname = "Ramsby", IsActive = false },
            new Person() { Firstname = "Coreen", Lastname = "McGann", IsActive = false },
            new Person() { Firstname = "Kyle", Lastname = "Coster", IsActive = true },
            new Person() { Firstname = "Evangelia", Lastname = "Bowker", IsActive = true },
            new Person() { Firstname = "Angeli", Lastname = "Collihole", IsActive = true },
            new Person() { Firstname = "Bill", Lastname = "Lawther", IsActive = false },
            new Person() { Firstname = "Kore", Lastname = "Reide", IsActive = false },
            new Person() { Firstname = "Tracy", Lastname = "Gwinnell", IsActive = false },
            new Person() { Firstname = "Lazaro", Lastname = "Partington", IsActive = true },
            new Person() { Firstname = "Doretta", Lastname = "Aingell", IsActive = true },
            new Person() { Firstname = "Olvan", Lastname = "Andraud", IsActive = true },
            new Person() { Firstname = "Templeton", Lastname = "Chetwynd", IsActive = true },
            new Person() { Firstname = "Daile", Lastname = "Kelsow", IsActive = true },
            new Person() { Firstname = "Marcie", Lastname = "Brearty", IsActive = true },
            new Person() { Firstname = "Irwinn", Lastname = "Lilian", IsActive = true },
            new Person() { Firstname = "Niki", Lastname = "Moreland", IsActive = false },
            new Person() { Firstname = "Honey", Lastname = "Waddup", IsActive = false },
            new Person() { Firstname = "Amber", Lastname = "Hoopper", IsActive = true },
            new Person() { Firstname = "Delilah", Lastname = "Dougary", IsActive = true },
            new Person() { Firstname = "Tory", Lastname = "Ovington", IsActive = false },
            new Person() { Firstname = "Doralin", Lastname = "Conrard", IsActive = false },
            new Person() { Firstname = "Eugene", Lastname = "Custard", IsActive = false },
            new Person() { Firstname = "Corella", Lastname = "Peotz", IsActive = true },
            new Person() { Firstname = "Chris", Lastname = "Rayne", IsActive = true },
            new Person() { Firstname = "Alexandro", Lastname = "Kwietek", IsActive = false },
            new Person() { Firstname = "Selie", Lastname = "Tenwick", IsActive = false },
            new Person() { Firstname = "Corliss", Lastname = "Haensel", IsActive = false },
            new Person() { Firstname = "Misti", Lastname = "Jikylls", IsActive = false },
            new Person() { Firstname = "Rosaline", Lastname = "Jephson", IsActive = false },
            new Person() { Firstname = "Irene", Lastname = "Farnsworth", IsActive = false },
            new Person() { Firstname = "Dominique", Lastname = "O'Shiels", IsActive = false },
            new Person() { Firstname = "Mellie", Lastname = "Cyson", IsActive = true },
            new Person() { Firstname = "Madelena", Lastname = "Chin", IsActive = true },
            new Person() { Firstname = "Charlotte", Lastname = "Clixby", IsActive = true },
            new Person() { Firstname = "Samara", Lastname = "Shavel", IsActive = true },
            new Person() { Firstname = "Brod", Lastname = "Kitt", IsActive = true },
            new Person() { Firstname = "Maridel", Lastname = "Dalley", IsActive = false },
            new Person() { Firstname = "Wini", Lastname = "Hundley", IsActive = true },
        });
    }

    private async Task<IEnumerable<Person>> GetPeopleLocal(string searchText)
    {
        Results = new ApiResult<IEnumerable<Person>>()
        {
            Page = 1,
            TotalPages = 1
        };

        var results =
            await Task.FromResult(ExampleData.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower()) && x.IsActive == ShowInactive).ToList());

        Results.Data = results;
        Results.Count = results.Count();

        return results;
    }

    private async Task<IEnumerable<Person>> GetPeopleRemote(string searchText)
    {
        Results = new ApiResult<IEnumerable<Person>>()
        {
            Page = 1,
            TotalPages = 1
        };

        var results =
            await httpClient.GetJsonAsync<List<Person>>($"https://localhost:44376/api/persons/?name={searchText}");

        Results.Data = results;
        Results.Count = results.Count();

        return results;
    }

    private void HandleFormSubmit()
    {
        Console.WriteLine("Form Submitted Successfully!");
    }

}
