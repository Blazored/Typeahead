@page "/"
@inject HttpClient httpClient

<h1>Blazored Typeahead - Form</h1>

<EditForm Model="@FormModel" OnValidSubmit="@HandleFormSubmit">
    <DataAnnotationsValidator />

    <BlazoredTypeaheadInput SearchMethod="@GetPeopleLocal"
                            @bind-Value="@FormModel.SelectedPerson"
                            Placeholder="Search by first name...">
        <SelectedTemplate Context="person">
            @person.Firstname
        </SelectedTemplate>
        <ResultTemplate Context="person">
            @person.Firstname @person.Lastname
        </ResultTemplate>
        <HeaderTemplate>
            Header Template
        </HeaderTemplate>
        <FooterTemplate>
            Footer Template
        </FooterTemplate>
    </BlazoredTypeaheadInput>
    <ValidationMessage For="@(() => FormModel.SelectedPerson)" />

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<hr />

@if (FormModel.SelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @FormModel.SelectedPerson.Firstname @FormModel.SelectedPerson.Lastname</p>
}

<hr />

<h1>Blazored Typeahead - Standalone</h1>


<BlazoredTypeahead SearchMethod="@GetPeopleLocal"
                   @bind-Value="@SelectedPerson"
                   Placeholder="Search by first name...">
    <SelectedTemplate Context="person">
        @person.Firstname
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname
    </ResultTemplate>
</BlazoredTypeahead>

<hr />

@if (SelectedPerson != null)
{
    <p>Selected: @SelectedPerson.Firstname @SelectedPerson.Lastname</p>
}


@code {

    private List<Person> People = new List<Person>();

    private Person SelectedPerson;
    private FormExample FormModel = new FormExample();

    protected override void OnInitialized()
    {
        People.AddRange(new List<Person>() {
            new Person() { Firstname = "Martelle", Lastname = "Cullon" },
            new Person() { Firstname = "Zelda", Lastname = "Abrahamsson" },
            new Person() { Firstname = "Benedetta", Lastname = "Posse" },
            new Person() { Firstname = "Benoite", Lastname = "Gobel" },
            new Person() { Firstname = "Charlot", Lastname = "Fullicks" },
            new Person() { Firstname = "Vinson", Lastname = "Turbat" },
            new Person() { Firstname = "Lenore", Lastname = "Malam" },
            new Person() { Firstname = "Emanuele", Lastname = "Kolakovic" },
            new Person() { Firstname = "Rosalyn", Lastname = "Mackin" },
            new Person() { Firstname = "Yanaton", Lastname = "Krishtopaittis" },
            new Person() { Firstname = "Frederik", Lastname = "McGeachie" },
            new Person() { Firstname = "Parrnell", Lastname = "Ramsby" },
            new Person() { Firstname = "Coreen", Lastname = "McGann" },
            new Person() { Firstname = "Kyle", Lastname = "Coster" },
            new Person() { Firstname = "Evangelia", Lastname = "Bowker" },
            new Person() { Firstname = "Angeli", Lastname = "Collihole" },
            new Person() { Firstname = "Bill", Lastname = "Lawther" },
            new Person() { Firstname = "Kore", Lastname = "Reide" },
            new Person() { Firstname = "Tracy", Lastname = "Gwinnell" },
            new Person() { Firstname = "Lazaro", Lastname = "Partington" },
            new Person() { Firstname = "Doretta", Lastname = "Aingell" },
            new Person() { Firstname = "Olvan", Lastname = "Andraud" },
            new Person() { Firstname = "Templeton", Lastname = "Chetwynd" },
            new Person() { Firstname = "Daile", Lastname = "Kelsow" },
            new Person() { Firstname = "Marcie", Lastname = "Brearty" },
            new Person() { Firstname = "Irwinn", Lastname = "Lilian" },
            new Person() { Firstname = "Niki", Lastname = "Moreland" },
            new Person() { Firstname = "Honey", Lastname = "Waddup" },
            new Person() { Firstname = "Amber", Lastname = "Hoopper" },
            new Person() { Firstname = "Delilah", Lastname = "Dougary" },
            new Person() { Firstname = "Tory", Lastname = "Ovington" },
            new Person() { Firstname = "Doralin", Lastname = "Conrard" },
            new Person() { Firstname = "Eugene", Lastname = "Custard" },
            new Person() { Firstname = "Corella", Lastname = "Peotz" },
            new Person() { Firstname = "Chris", Lastname = "Rayne" },
            new Person() { Firstname = "Alexandro", Lastname = "Kwietek" },
            new Person() { Firstname = "Selie", Lastname = "Tenwick" },
            new Person() { Firstname = "Corliss", Lastname = "Haensel" },
            new Person() { Firstname = "Misti", Lastname = "Jikylls" },
            new Person() { Firstname = "Rosaline", Lastname = "Jephson" },
            new Person() { Firstname = "Irene", Lastname = "Farnsworth" },
            new Person() { Firstname = "Dominique", Lastname = "O'Shiels" },
            new Person() { Firstname = "Mellie", Lastname = "Cyson" },
            new Person() { Firstname = "Madelena", Lastname = "Chin" },
            new Person() { Firstname = "Charlotte", Lastname = "Clixby" },
            new Person() { Firstname = "Samara", Lastname = "Shavel" },
            new Person() { Firstname = "Brod", Lastname = "Kitt" },
            new Person() { Firstname = "Maridel", Lastname = "Dalley" },
            new Person() { Firstname = "Wini", Lastname = "Hundley" },
        });
    }

    private async Task<IEnumerable<Person>> GetPeopleLocal(string searchText)
    {
        return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Person>> GetPeopleRemote(string searchText)
    {
        var result = await httpClient.GetJsonAsync<List<Person>>($"https://localhost:44376/api/persons/?name={searchText}");

        return result;
    }

    private void HandleFormSubmit()
    {
        Console.WriteLine("Form Submitted Successfully!");
    }

}
